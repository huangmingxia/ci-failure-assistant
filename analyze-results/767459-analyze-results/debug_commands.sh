#!/bin/bash
# Debug Commands for ReportPortal Launch 767459 Failures
# Generated by CI Failure Analysis workflow

echo "=== Debug Commands for Launch 767459 Failures ==="
echo

# Infrastructure Issues (High Priority)
echo "=== Image Pull Secret Investigation ==="
echo "# Check image pull secret status"
echo "oc get secret hive-operator-dockercfg-v2zrv -n hive -o yaml"
echo "oc describe secret hive-operator-dockercfg-v2zrv -n hive"
echo
echo "# Check all secrets in hive namespace"
echo "oc get secrets -n hive | grep dockercfg"
echo
echo "# Check pod events for container creation issues"
echo "oc get events -n hive --sort-by='.lastTimestamp'"
echo "oc describe pod -l app=hive-controllers -n hive"
echo

# E2E Test Issues
echo "=== ClusterPool and MachinePool Debugging ==="
echo "# Check ClusterPool conditions"
echo "oc get clusterpool -A -o yaml"
echo
echo "# Check MachinePool conditions"
echo "oc get machinepool -A -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.conditions[*].type}{"\n"}{end}'"
echo
echo "# Check ClusterDeployment status"
echo "oc get clusterdeployment -A -o wide"
echo

echo "=== Metrics and CDC Investigation ==="
echo "# Check Prometheus metrics for clusterpool"
echo "# Query: hive_clusterpool_stale_clusterdeployments_deleted"
echo "# Note: Replace THANOS_URL and TOKEN with actual values"
echo "curl -k -H \"Authorization: Bearer TOKEN\" \"THANOS_URL/api/v1/query?query=hive_clusterpool_stale_clusterdeployments_deleted\""
echo
echo "# Check pool version changes"
echo "oc get clusterpool -A -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.metadata.annotations.hive\.openshift\.io/pool-version}{"\n"}{end}'"
echo

echo "=== Spot Instance Investigation ==="
echo "# Check MachinePool spot configuration"
echo "oc get machinepool -A -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.platform.aws.spotMarketOptions}{"\n"}{end}'"
echo
echo "# Check AWS spot instance requests (requires AWS CLI)"
echo "# aws ec2 describe-spot-instance-requests --region us-east-1"
echo

echo "=== Claim Lifetime Debugging ==="
echo "# Check ClusterClaim timestamps"
echo "oc get clusterclaim -A -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.metadata.creationTimestamp}{"\t"}{.spec.lifetime}{"\n"}{end}'"
echo
echo "# Check ClusterClaim conditions"
echo "oc get clusterclaim -A -o yaml | grep -A5 -B5 conditions"
echo

echo "=== Hive Controller State Investigation ==="
echo "# Check HiveConfig for FailedProvisionConfig"
echo "oc get hiveconfig cluster -o jsonpath='{.spec.failedProvisionConfig}'"
echo
echo "# Check ClusterDeployment provision conditions"
echo "oc get clusterdeployment -A -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.conditions[?(@.type==\"ProvisionFailed\")].reason}{"\n"}{end}'"
echo
echo "# Check install pods and logs"
echo "oc get pods -A | grep provision"
echo "# oc logs POD_NAME -n NAMESPACE"
echo

echo "=== General Hive Health Checks ==="
echo "# Check Hive operator status"
echo "oc get deployment hive-operator -n hive"
echo "oc logs deployment/hive-operator -n hive --tail=50"
echo
echo "# Check Hive controllers status"
echo "oc get deployment hive-controllers -n hive"
echo "oc logs deployment/hive-controllers -n hive --tail=50"
echo
echo "# Check CRD status"
echo "oc get crd | grep hive"
echo
echo "=== Environment Validation ==="
echo "# Check cluster version and status"
echo "oc get clusterversion"
echo "oc get nodes"
echo
echo "# Check available resources"
echo "oc describe nodes | grep -A5 -B5 'Allocated resources'"
echo
echo "# Check image registry connectivity"
echo "oc get imagestream -n openshift || echo 'No imagestreams found'"
echo
echo "=== End Debug Commands ==="