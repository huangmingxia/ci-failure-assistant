#!/bin/bash
# Debug Commands for ReportPortal Launch 767719 Failures
# Generated by CI Failure Analysis workflow

echo "=== Debug Commands for Launch 767719 Failures ==="
echo

# Infrastructure Issues (Primary Focus)
echo "=== HiveConfig Managed Domains Investigation (OCP-51195) ==="
echo "# Check current HiveConfig managed domains configuration"
echo "oc get hiveconfig cluster -o yaml | grep -A20 managedDomains"
echo
echo "# Verify Route53 credentials secret exists"
echo "oc get secret route53-aws-creds -n hive -o yaml"
echo "oc describe secret route53-aws-creds -n hive"
echo
echo "# Check MANAGED_DOMAINS_FILE environment variable"
echo "oc get deployment hive-operator -n hive -o yaml | grep -A5 -B5 MANAGED_DOMAINS_FILE"
echo
echo "# Test domain validation"
echo "# Expected: cluster-51195-xsji.dev-aws.red-chesterfield.com should be child of dev-aws.red-chesterfield.com"
echo
echo "# Add managed domain to HiveConfig:"
echo "cat <<EOF | oc apply -f -"
echo "apiVersion: hive.openshift.io/v1"
echo "kind: HiveConfig"
echo "metadata:"
echo "  name: cluster"
echo "spec:"
echo "  managedDomains:"
echo "  - domains:"
echo "    - \"dev-aws.red-chesterfield.com\""
echo "    aws:"
echo "      credentialsSecretRef:"
echo "        name: route53-aws-creds"
echo "EOF"
echo

echo "=== AWS VPN Gateway Quota Investigation (OCP-75241) ==="
echo "# Check current VPN Gateway usage"
echo "aws ec2 describe-vpn-gateways --region us-east-1 --query 'VpnGateways[*].{ID:VpnGatewayId,State:State,Type:Type}' --output table"
echo
echo "# Check quota limits"
echo "aws service-quotas get-service-quota --service-code ec2 --quota-code L-7029FAB6 --region us-east-1"
echo
echo "# Identify orphaned VPN Gateways (not attached to VPCs)"
echo "aws ec2 describe-vpn-gateways --region us-east-1 --query 'VpnGateways[?State==\`available\` && !VpcAttachments[0]]'"
echo
echo "# Clean up unused VPN Gateways (CAREFUL - verify not in use)"
echo "# aws ec2 delete-vpn-gateway --vpn-gateway-id vgw-xxxxxxxxx"
echo
echo "# Request quota increase"
echo "# aws service-quotas request-service-quota-increase --service-code ec2 --quota-code L-7029FAB6 --desired-value 15"
echo

# E2E Test Issues
echo "=== Release Image Tag Investigation (OCP-69203) ==="
echo "# Check available installer tags in release image"
echo "oc adm release info registry.ci.openshift.org/ocp/release:4.19.0-0.nightly-2025-08-28-080135 | grep installer"
echo
echo "# List all available image tags"
echo "oc adm release info registry.ci.openshift.org/ocp/release:4.19.0-0.nightly-2025-08-28-080135 --image-for='*'"
echo
echo "# Check specific installer-altinfra tag"
echo "oc adm release info registry.ci.openshift.org/ocp/release:4.19.0-0.nightly-2025-08-28-080135 --image-for=installer-altinfra || echo 'Tag not found'"
echo
echo "# Check ClusterImageSet status"
echo "oc get clusterimageset -A"
echo "oc describe clusterimageset <imageset-name>"
echo

echo "=== Log Redaction Validation Investigation (OCP-32223/35193/23308) ==="
echo "# Check ClusterDeployment for log redaction settings"
echo "oc get clusterdeployment <cluster-name> -o yaml | grep -A5 -B5 disable-install-log-password-redaction"
echo
echo "# Check image pull secret status"
echo "oc get secret hive-operator-dockercfg-qt86b -n hive -o yaml"
echo "oc describe secret hive-operator-dockercfg-qt86b -n hive"
echo
echo "# Check provision pod logs for redaction markers"
echo "oc get pods -A | grep provision"
echo "oc logs <provision-pod> -n <namespace> | grep -i \"REDACTED LINE OF OUTPUT\""
echo
echo "# Check provision pod events"
echo "oc describe pod <provision-pod> -n <namespace>"
echo
echo "# Verify ARM64 cluster configuration"
echo "oc get clusterdeployment <cluster-name> -o jsonpath='{.spec.platform.aws.defaultMachinePlatform.type}'"
echo

echo "=== General Environment Validation ==="
echo "# Check Hive operator health"
echo "oc get deployment hive-operator -n hive"
echo "oc get deployment hive-controllers -n hive"
echo "oc logs deployment/hive-operator -n hive --tail=50"
echo "oc logs deployment/hive-controllers -n hive --tail=50"
echo
echo "# Check CRD availability"
echo "oc get crd | grep hive"
echo "oc get crd clusterdeployments.hive.openshift.io"
echo
echo "# Check admission webhooks"
echo "oc get validatingadmissionwebhook clusterdeploymentvalidators.admission.hive.openshift.io"
echo "oc describe validatingadmissionwebhook clusterdeploymentvalidators.admission.hive.openshift.io"
echo
echo "# Check cluster version and resources"
echo "oc get clusterversion"
echo "oc get nodes"
echo "oc top nodes"
echo
echo "# Check test namespace and resources"
echo "oc get ns | grep -E 'hive|test'"
echo "oc get clusterdeployment -A"
echo "oc get clusterpool -A"
echo
echo "=== Environment Health Checks ==="
echo "# Check image registry connectivity"
echo "oc get imagestream -n openshift || echo 'No imagestreams found'"
echo
echo "# Check for ImagePullBackOff issues"
echo "oc get pods -A | grep ImagePullBackOff"
echo
echo "# Check DNS resolution"
echo "nslookup dev-aws.red-chesterfield.com || echo 'DNS resolution failed'"
echo
echo "# Check AWS credentials and permissions"
echo "aws sts get-caller-identity"
echo "aws iam get-user"
echo
echo "# Check GCP credentials (for cross-cloud test)"
echo "gcloud auth list"
echo "gcloud config list project"
echo
echo "=== Resource Cleanup Commands ==="
echo "# Clean up VPN Gateways (use with caution)"
echo "# for vgw in \$(aws ec2 describe-vpn-gateways --query 'VpnGateways[?State==\`available\` && !VpcAttachments[0]].VpnGatewayId' --output text); do"
echo "#   echo \"Deleting VPN Gateway: \$vgw\""
echo "#   aws ec2 delete-vpn-gateway --vpn-gateway-id \$vgw"
echo "# done"
echo
echo "# Clean up test ClusterDeployments"
echo "# oc delete clusterdeployment -l test-launch=767719"
echo
echo "=== End Debug Commands ==="